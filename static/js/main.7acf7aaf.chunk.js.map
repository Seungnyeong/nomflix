{"version":3,"sources":["asset/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","Grid","Section","title","children","Loader","role","aria-label","Text","span","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","map","movie","poster_path","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","erorr","console","log","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","handleSubmit","searchTerm","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","List","header","ul","Item","li","current","SLink","Link","withRouter","pathname","location","TVPresenter","topRated","airingToday","TVContainer","componentDidMount","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","original_title","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"mGAAA,OAAe,cAA0B,2C,4NCEnCA,E,OAAMC,EAAMC,OAAO,CACrBC,QAAS,gCACTC,OAAQ,CACJ,QAAW,mCACX,SAAY,WAIPC,EACC,kBAAML,EAAIM,IAAI,sBADfD,EAED,kBAAML,EAAIM,IAAI,mBAFbD,EAGF,kBAAML,EAAIM,IAAI,kBAHZD,EAIE,SAAAE,GAAE,OACbP,EAAIM,IAAJ,gBAAiBC,GAAM,CACrBH,OAAQ,CACNI,mBAAoB,aAPfH,GAUH,SAAAI,GAAI,OACVT,EAAIM,IAAI,eAAgB,CACtBF,OAAQ,CACNM,MAAOC,mBAAmBF,OAKrBG,GACD,kBAAMZ,EAAIM,IAAI,iBADbM,GAEF,kBAAMZ,EAAIM,IAAI,eAFZM,GAGE,kBAAMZ,EAAIM,IAAI,oBAHhBM,GAIC,SAAAL,GAAE,OACZP,EAAIM,IAAJ,aAAcC,GAAM,CAClBH,OAAQ,CACNI,mBAAoB,aAPfI,GAUH,SAAAH,GAAI,OACVT,EAAIM,IAAI,YAAa,CACnBF,OAAQ,CACNM,MAAOC,mBAAmBF,O,wBCpC5BI,GAAYC,KAAOC,IAAV,0FAMTC,GAAQF,KAAOC,IAAV,0EAKLE,GAAOH,KAAOC,IAAV,oJAuBKG,GAhBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,gBAACP,GAAD,WACI,eAACG,GAAD,UAAQG,IACR,eAACF,GAAD,UAAOG,QCvBTP,GAAYC,KAAOC,IAAV,qKAcAM,GALA,kBACX,eAAC,GAAD,UACI,uBAAMC,KAAK,MAAMC,aAAW,UAA5B,6BCTFV,GAAYC,KAAOC,IAAV,mGAMTS,GAAOV,KAAOW,KAAV,8CACI,SAAAC,GAAK,OAAIA,EAAMC,SAWdC,GARC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OAAqB,eAAC,GAAD,UAAW,eAACH,GAAD,CAAMG,MAAOA,EAAb,SAAqBE,OCV/DhB,GAAYC,KAAOC,IAAV,mDAMTe,GAAQhB,KAAOC,IAAV,wNACiB,SAAAW,GAAK,OAAIA,EAAMK,SAQrCC,GAASlB,KAAOW,KAAV,4GAONQ,GAAiBnB,KAAOC,IAAV,8MAIVe,GAGAE,IAMJhB,GAAQF,KAAOW,KAAV,4EAKLS,GAAOpB,KAAOW,KAAV,4FAuCKU,GAjCA,SAAC,GAAD,IAAG5B,EAAH,EAAGA,GAAI6B,EAAP,EAAOA,SAAUjB,EAAjB,EAAiBA,MAAOkB,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,IAAsCC,eAAtC,gBACX,eAAC,IAAD,CAAMC,GAAID,EAAO,iBAAahC,GAAb,gBAA6BA,GAA9C,SACI,gBAAC,GAAD,WACI,gBAAC0B,GAAD,WACI,eAACH,GAAD,CACIC,MACIK,EAAQ,yCAC4BA,GAClCK,EAAQ,IAA8BC,UAGhD,gBAACV,GAAD,WACI,uBAAMV,KAAK,MAAMC,aAAW,SAA5B,0BAEQ,IACPc,EAJL,YAOJ,eAAC,GAAD,UAAQlB,EAAMwB,OAAS,GAAf,UAAuBxB,EAAMyB,UAAU,EAAG,IAA1C,OAAqDzB,IAC7D,eAACe,GAAD,UAAOI,U,SC9DbzB,GAAYC,KAAOC,IAAV,kDAuEA8B,GAnEO,SAAC,GAAD,IAClBC,EADkB,EAClBA,WAAYC,EADM,EACNA,QAASC,EADH,EACGA,SAAUC,EADb,EACaA,QAASC,EADtB,EACsBA,MADtB,OAGlBD,EAAU,eAAC,GAAD,IACN,uCACI,eAACE,GAAA,EAAD,UACQ,uDAER,gBAAC,GAAD,WAEKL,GAAcA,EAAWH,OAAS,GAC/B,eAAC,GAAD,CAASxB,MAAM,cAAf,SACK2B,EAAWM,KAAI,SAAAC,GAAK,OACjB,eAAC,GAAD,CAEI9C,GAAI8C,EAAM9C,GACVY,MAAOkC,EAAMlC,MACbiB,SAAUiB,EAAMC,YAChBf,SAAS,EACTF,OAAQgB,EAAME,aACdjB,KAAMe,EAAMG,cAAgBH,EAAMG,aAAaZ,UAAU,EAAG,IANvDS,EAAM9C,SAU1ByC,GAAYA,EAASL,OAAS,GAC3B,eAAC,GAAD,CAASxB,MAAM,WAAf,SAEQ6B,EAASI,KAAI,SAAAC,GAAK,OACd,eAAC,GAAD,CAEA9C,GAAI8C,EAAM9C,GACVY,MAAOkC,EAAMlC,MACbiB,SAAUiB,EAAMC,YAChBf,SAAS,EACTF,OAAQgB,EAAME,aACdjB,KAAMe,EAAMG,cAAgBH,EAAMG,aAAaZ,UAAU,EAAG,IANvDS,EAAM9C,SAU1BwC,GAAWA,EAAQJ,OAAS,GACzB,eAAC,GAAD,CAASxB,MAAM,iBAAf,SAEQ4B,EAAQK,KAAI,SAAAC,GAAK,OACb,eAAC,GAAD,CAEA9C,GAAI8C,EAAM9C,GACVY,MAAOkC,EAAMlC,MACbiB,SAAUiB,EAAMC,YAChBf,SAAS,EACTF,OAAQgB,EAAME,aACdjB,KAAMe,EAAMG,cAAgBH,EAAMG,aAAaZ,UAAU,EAAG,IANvDS,EAAM9C,SAU1B2C,GAAS,eAAC,GAAD,CAASrB,KAAMqB,EAAOvB,MAAM,mBChEvC8B,G,4MCGXC,MAAQ,CACJZ,WAAY,KACZE,SAAU,KACVD,QAAS,KACTG,MAAO,KACPD,SAAU,G,8FAGd,sCAAAU,EAAA,+EAEyDtD,IAFzD,uBAEmCyC,EAFnC,EAEgBc,KAASC,QAFzB,SAGqDxD,IAHrD,uBAGiC2C,EAHjC,EAGgBY,KAAQC,QAHxB,UAIoDxD,IAJpD,iBAIiC0C,EAJjC,EAIgBa,KAAQC,QAEhBC,KAAKC,SAAS,CACVjB,aACAE,WACAD,YATZ,kDAaQe,KAAKC,SAAS,CACVC,MAAQ,yBAdpB,yBAkBQF,KAAKC,SAAS,CACVd,SAAS,IAnBrB,6E,0EAwBA,WAAU,IAAD,EACqDa,KAAKJ,MAAvDZ,EADH,EACGA,WAAYE,EADf,EACeA,SAAUD,EADzB,EACyBA,QAASG,EADlC,EACkCA,MAAOD,EADzC,EACyCA,QAE9C,OADAgB,QAAQC,IAAIJ,KAAKJ,OACT,eAAC,GAAD,CACJZ,WAAYA,EACZE,SAAUA,EACVD,QAASA,EACTG,MAAOA,EACPD,QAASA,Q,GAzCQkB,IAAMC,WCK7BvD,GAAYC,KAAOC,IAAV,uDAKTsD,GAAOvD,KAAOwD,KAAV,0EAKJC,GAAQzD,KAAO0D,MAAV,2FAiEIC,GAxDS,SAAC,GAAD,IACpBC,EADoB,EACpBA,aAAcC,EADM,EACNA,UAAW1B,EADL,EACKA,QAASC,EADd,EACcA,MAAQ0B,EADtB,EACsBA,aAAcC,EADpC,EACoCA,WAAYC,EADhD,EACgDA,WADhD,OAGpB,uCACA,eAAC3B,GAAA,EAAD,UACY,wDAEZ,gBAAC,GAAD,WACI,eAACkB,GAAD,CAAMU,SAAUH,EAAhB,SACI,eAACL,GAAD,CAAOS,YAAY,gCAAgCC,MAAOJ,EAAYK,SAAUJ,MAEnF7B,EAAU,eAAC,GAAD,IAAa,uCACvByB,GAAgBA,EAAa/B,OAAS,GACrC,eAAC,GAAD,CAASxB,MAAM,gBAAf,SACGuD,EAAatB,KAAI,SAAAC,GAAK,OACpB,eAAC,GAAD,CAEC9C,GAAI8C,EAAM9C,GACVY,MAAOkC,EAAMlC,MACbiB,SAAUiB,EAAMC,YAChBf,SAAS,EACTF,OAAQgB,EAAME,aACdjB,KAAMe,EAAMG,cAAgBH,EAAMG,aAAaZ,UAAU,EAAG,IANvDS,EAAM9C,SAUlBoE,GAAaA,EAAUhC,OAAS,GAC/B,eAAC,GAAD,CAASxB,MAAM,kBAAf,SACGwD,EAAUvB,KAAI,SAAA+B,GAAI,OACjB,eAAC,GAAD,CAEE5E,GAAI4E,EAAK5E,GACTY,MAAOgE,EAAKC,cACZhD,SAAU+C,EAAK7B,YACfjB,OAAQ8C,EAAK5B,aACbjB,KAAM6C,EAAKE,gBAAkBF,EAAKE,eAAezC,UAAU,EAAG,IALzDuC,EAAK5E,SASb2C,GAAS,eAAC,GAAD,CAASrB,KAAMqB,EAAOvB,MAAM,YACrCgD,GAAaD,GAAqC,IAArBC,EAAUhC,QAAwC,IAAxB+B,EAAa/B,QAAgB,eAAC,GAAD,CAASd,KAAI,6BAAwBgD,GAAclD,MAAM,qBClE3I2D,G,4MCGX5B,MAAQ,CACJgB,aAAc,KACdC,UAAW,KACXE,WAAa,GACb5B,SAAS,EACTC,MAAO,M,EAGX0B,aAAe,SAACW,GACZA,EAAMC,iBADgB,IAEdX,EAAe,EAAKnB,MAApBmB,WACW,KAAfA,GACA,EAAKY,aAAaZ,I,EAI1BC,WAAa,SAACS,GAAW,IACHN,EAAYM,EAAtBG,OAAUT,MAClBhB,QAAQC,IAAIe,GACZ,EAAKlB,SAAS,CACVc,WAAaI,K,EAKrBQ,a,sBAAe,oCAAA9B,EAAA,6DACHkB,EAAe,EAAKnB,MAApBmB,WACR,EAAKd,SAAS,CAAEd,SAAS,IAFd,kBAI2C5C,GAAiBwE,GAJ5D,uBAImBH,EAJnB,EAICd,KAAQC,QAJT,SAKwCjD,GAAaiE,GALrD,gBAKmBF,EALnB,EAKCf,KAAQC,QAEhB,EAAKE,SAAS,CACVW,eACAC,cATG,kDAYP,EAAKZ,SAAS,CAAEb,MAAO,wBAZhB,yBAcP,EAAKa,SAAS,CAAEd,SAAS,IAdlB,6E,4CAkBf,WAAU,IAAD,EAC2Da,KAAKJ,MAA7DgB,EADH,EACGA,aAAcC,EADjB,EACiBA,UAAWE,EAD5B,EAC4BA,WAAY5B,EADxC,EACwCA,QAASC,EADjD,EACiDA,MAEtD,OACI,eAAC,GAAD,CACIwB,aAAcA,EACdC,UAAWA,EACXE,WAAYA,EACZ5B,QAASA,EACTC,MAAOA,EACP0B,aAAcd,KAAKc,aACnBE,WAAYhB,KAAKgB,iB,GAvDJX,IAAMC,WCe7BuB,IAfS7E,KAAO8E,OAAV,kUAeC9E,KAAO+E,GAAV,iDAIJC,GAAOhF,KAAOiF,GAAV,+KAIqB,SAAArE,GAAK,OAAIA,EAAMsE,QAAU,UAAY,iBAI9DC,GAAQnF,aAAOoF,IAAPpF,CAAH,4HAOIqF,gBAAW,gBAAcC,EAAd,EAAEC,SAAYD,SAAd,OAGtB,kCACI,gBAACT,GAAD,WACI,eAACG,GAAD,CAAME,QAAsB,MAAbI,EAAf,SACI,eAACH,GAAD,CAAOzD,GAAG,IAAV,sBAEJ,eAACsD,GAAD,CAAME,QAAsB,QAAbI,EAAf,SACI,eAACH,GAAD,CAAOzD,GAAG,MAAV,kBAEJ,eAACsD,GAAD,CAAME,QAAsB,YAAbI,EAAf,SACI,eAACH,GAAD,CAAOzD,GAAG,UAAV,8BCzCV3B,GAAYC,KAAOC,IAAV,kDAkEAuF,GA5DK,SAAC,GAAD,IAChBC,EADgB,EAChBA,SAAUxD,EADM,EACNA,QAASyD,EADH,EACGA,YAAavD,EADhB,EACgBA,QAASC,EADzB,EACyBA,MADzB,OAEdD,EAAU,eAAC,GAAD,IACR,uCACA,eAACE,GAAA,EAAD,UACQ,yDAER,gBAAC,GAAD,WACKoD,GAAYA,EAAS5D,OAAS,GAC3B,eAAC,GAAD,CAASxB,MAAM,kBAAf,SACKoF,EAASnD,KAAI,SAAA+B,GAAI,OACd,eAAC,GAAD,CAEI5E,GAAI4E,EAAK5E,GACTY,MAAOgE,EAAKC,cACZhD,SAAU+C,EAAK7B,YACfjB,OAAQ8C,EAAK5B,aACbjB,KAAM6C,EAAKE,gBAAkBF,EAAKE,eAAezC,UAAU,EAAG,IALzDuC,EAAK5E,SASzBwC,GAAWA,EAAQJ,OAAS,GACzB,eAAC,GAAD,CAASxB,MAAM,gBAAf,SACK4B,EAAQK,KAAI,SAAA+B,GAAI,OACb,eAAC,GAAD,CAEI5E,GAAI4E,EAAK5E,GACTY,MAAOgE,EAAKC,cACZhD,SAAU+C,EAAK7B,YACfjB,OAAQ8C,EAAK5B,aACbjB,KAAM6C,EAAKE,gBAAkBF,EAAKE,eAAezC,UAAU,EAAG,IALzDuC,EAAK5E,SASzBiG,GAAeA,EAAY7D,OAAS,GACjC,eAAC,GAAD,CAASxB,MAAM,eAAf,SACKqF,EAAYpD,KAAI,SAAA+B,GAAI,OACjB,eAAC,GAAD,CAEI5E,GAAI4E,EAAK5E,GACTY,MAAOgE,EAAKC,cACZhD,SAAU+C,EAAK7B,YACfjB,OAAQ8C,EAAK5B,aACbjB,KAAM6C,EAAKE,gBAAkBF,EAAKE,eAAezC,UAAU,EAAG,IALzDuC,EAAK5E,SASzB2C,GAAS,eAAC,GAAD,CAASrB,KAAMqB,EAAOvB,MAAM,mBC5DnC8E,G,4MCGX/C,MAAQ,CACJ6C,SAAY,KACZxD,QAAU,KACVyD,YAAa,KACbvD,SAAS,EACTC,MAAO,M,EAGXwD,kB,sBAAoB,sCAAA/C,EAAA,+EAEkC/C,KAFlC,uBAEc2F,EAFd,EAEJ3C,KAASC,QAFL,SAGgCjD,KAHhC,uBAGcmC,EAHd,EAGJa,KAASC,QAHL,UAIqCjD,KAJrC,iBAIc4F,EAJd,EAIJ5C,KAASC,QAEjB,EAAKE,SAAS,CAAEwC,WAAUxD,UAASyD,gBANvB,kDAQZ,EAAKzC,SAAS,CACVb,MAAQ,kCATA,yBAYZ,EAAKa,SAAS,CACVd,SAAU,IAbF,6E,4CAkBpB,WAAU,IAAD,EACsDa,KAAKJ,MAAxD6C,EADH,EACGA,SAAUxD,EADb,EACaA,QAASyD,EADtB,EACsBA,YAAavD,EADnC,EACmCA,QAASC,EAD5C,EAC4CA,MAEjD,OADAe,QAAQC,IAAIJ,KAAKJ,OAEb,eAAC,GAAD,CACI6C,SAAUA,EACVxD,QAASA,EACTyD,YAAaA,EACbvD,QAASA,EACTC,MAAOA,Q,GApCMiB,IAAMC,WCE7BvD,GAAYC,KAAOC,IAAV,qHAOT4F,GAAW7F,KAAOC,IAAV,mQAMY,SAAAW,GAAK,OAAIA,EAAMkF,WAQnCC,GAAU/F,KAAOC,IAAV,sHAQP+F,GAAQhG,KAAOC,IAAV,qLAEe,SAAAW,GAAK,OAAIA,EAAMkF,WAQnCG,GAAOjG,KAAOC,IAAV,uEAKJC,GAAQF,KAAOkG,GAAV,8EAMLC,GAAgBnG,KAAOC,IAAV,2BAEb+E,GAAOhF,KAAOW,KAAV,2BAEJyF,GAAUpG,KAAOW,KAAV,qDAIP0F,GAAWrG,KAAOsG,EAAV,gHAuDCC,GAhDS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQrE,EAAX,EAAWA,QAAX,EAAoBC,MAApB,OAEpBD,EACA,uCACA,eAACE,GAAA,EAAD,UACI,yDAEJ,eAAC,GAAD,OAGA,qCACA,gBAAC,GAAD,WACI,eAACA,GAAA,EAAD,UACI,mCAAQmE,EAAOC,eAAiBD,EAAOC,eAAiBD,EAAOlC,cAA/D,kBAER,eAACuB,GAAD,CACIC,QAAO,6CAAwCU,EAAOE,iBAE1D,gBAACX,GAAD,WACI,eAACC,GAAD,CACEF,QACEU,EAAOhE,YAAP,6CAC0CgE,EAAOhE,aAC7Cb,EAAQ,MAGhB,gBAACsE,GAAD,WACI,eAAC,GAAD,UAAQO,EAAOC,eAAiBD,EAAOC,eAAiBD,EAAOlC,gBAC/D,gBAAC6B,GAAD,WACA,eAAC,GAAD,UAAOK,EAAO9D,aAAe8D,EAAO9D,aAAaZ,UAAU,EAAE,GAAK0E,EAAOjC,eAAezC,UAAU,EAAE,KACpG,gBAACsE,GAAD,WAAUI,EAAOG,QAAUH,EAAOG,QAAUH,EAAOI,iBAAiB,GAApE,UACA,eAAC,GAAD,UACIJ,EAAOK,QAAUL,EAAOK,OAAOvE,KAAI,SAACwE,EAAOC,GAAR,OAAkBA,IAAUP,EAAOK,OAAOhF,OAAQ,EAAIiF,EAAME,KAA1C,WAAqDF,EAAME,KAA3D,eAGzD,eAACX,GAAD,UAAWG,EAAOS,uBCxGfC,G,kDCGX,WAAYtG,GAAQ,IAAD,sBACf,cAAMA,GADS,IAEK0E,EAAe1E,EAA3B2E,SAAYD,SAFL,OAGf,EAAK1C,MAAQ,CACT4D,OAAS,KACTpE,MAAO,KACPD,SAAS,EACTV,QAAU6D,EAAS6B,SAAS,YAPjB,E,4FAYnB,0CAAAtE,EAAA,2DAIQG,KAAKpC,MAFcnB,EAF3B,EAEQ2H,MAAS9H,OAAUG,GACR4H,EAHnB,EAGQC,QAAWD,KAEP5F,EAAYuB,KAAKJ,MAAjBnB,QACF8F,EAAWC,SAAS/H,IACtBgI,MAAMF,GAPd,yCAQeF,EAAK,MARpB,UAUQb,EAAS,KAVjB,UAYY/E,EAZZ,kCAcsClC,EAAsBgI,GAd5D,iBAcqBf,EAdrB,EAcc1D,KAdd,yCAgBsChD,GAAiByH,GAhBvD,iBAgBqBf,EAhBrB,EAgBc1D,KAhBd,QAmBQK,QAAQC,IAAIoD,GAnBpB,kDAqBQxD,KAAKC,SAAS,CAAEb,MAAQ,wBArBhC,yBAuBQY,KAAKC,SAAS,CAAEd,SAAU,EAAOqE,WAvBzC,6E,0EA4BA,WAAU,IAAD,EAC8BxD,KAAKJ,MAAhC4D,EADH,EACGA,OAAQpE,EADX,EACWA,MAAOD,EADlB,EACkBA,QAEvB,OADAgB,QAAQC,IAAIoD,GACJ,eAAC,GAAD,CACJA,OAAQA,EACRpE,MAAOA,EACPD,QAASA,Q,GA/CQkB,IAAMC,WCGpB,cACX,OACI,eAAC,IAAD,UACI,uCACA,eAAC,GAAD,IACA,gBAAC,IAAD,WACI,eAAC,IAAD,CAAOoE,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,eAAC,IAAD,CAAOH,KAAK,MAAME,UAAWE,KAC7B,eAAC,IAAD,CAAOJ,KAAK,UAAUE,UAAWG,KACjC,eAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,eAAC,IAAD,CAAON,KAAK,YAAYE,UAAWI,KACnC,eAAC,IAAD,CAAUC,KAAK,IAAIvG,GAAG,e,SCIvBwG,GAnBMC,aAAH,ycACZC,MCOSC,G,4JAPb,WACE,OAAO,uCACL,eAACC,GAAD,IACA,eAACC,GAAD,W,GAJYjF,aCClBkF,IAASC,OAAO,eAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7acf7aaf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        \"api_key\": \"61517144d2a67cf150a56cee740ea596\",\n        \"language\": \"en-US\",\n    }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.div`\n    font-size: 15px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap : 25px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display : flex;\n    justify-content: center;\n    font-size : 32px;\n    margin-top: 20px;\n`;\n\nconst Loader = () =>\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">😘</span>\n    </Container>\n\nexport default Loader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n\nconst Container = styled.div`\n    width : 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color : ${props => props.color}\n`;\n\nconst Message = ({ text, color }) => <Container><Text color={color}>{text}</Text></Container>\n\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size :12px;\n`;\n\n\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position : center center;\n    transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n    bottom : 5px;\n    right: 5px;\n    position: absolute ;\n    opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom : 5px;\n    position : relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom : 3px;\n`;\n\nconst Year = styled.span`\n    font-size : 10px;\n    color: rgba(255, 255, 255, 0.5);\n\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie=false }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={\n                        imageUrl\n                        ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                        : require(\"../asset/noPosterSmall.png\").default\n                    }\n                />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        ⭐️\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{title.length > 15 ? `${title.substring(0, 15)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id : PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie : PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\nconst Container = styled.div`\n    padding : 20px;\n`;\n\nconst HomePresenter = ({\n    nowPlaying, popular, upcoming, loading, error\n}) =>\n    loading ? <Loader /> : (\n        <>\n            <Helmet>\n                    <title>Movie | Nomflix</title>\n            </Helmet>\n            <Container>\n                \n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title=\"Now Playing\">\n                        {nowPlaying.map(movie =>\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.title}\n                                imageUrl={movie.poster_path}\n                                isMovie={true}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)} />\n                        )}\n                    </Section>\n                )}\n                {upcoming && upcoming.length > 0 && (\n                    <Section title=\"Upcoming\">\n                        {\n                            upcoming.map(movie =>\n                                <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.title}\n                                imageUrl={movie.poster_path}\n                                isMovie={true}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)} />\n                        )}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular Movies\">\n                        {\n                            popular.map(movie =>\n                                <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.title}\n                                imageUrl={movie.poster_path}\n                                isMovie={true}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)} />\n                        )}\n                    </Section>\n                )}\n                {error && <Message text={error} color=\"#e74c3c\"/>}\n                </Container>\n            </>\n    );\n\nHomePresenter.propTypes = {\n    nowPlaying : PropTypes.array,\n    popular : PropTypes.array,\n    upcoming : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string\n};\n\nexport default HomePresenter;","import HomeContainer from \"./HomeContainer\"\n\nexport default HomeContainer;","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading : true\n    };\n\n    async componentDidMount() {\n        try {\n            const { data : { results : nowPlaying }} = await moviesApi.nowPlaying();\n            const { data: { results: upcoming }} = await moviesApi.upcoming()\n            const { data: { results: popular }} = await moviesApi.popular()\n            \n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n            \n        } catch {\n            this.setState({\n                erorr : \"Can't get Movie Info\"\n            })\n        }\n        finally {\n            this.setState({\n                loading: false,\n            })\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        console.log(this.state)\n        return (<HomePresenter\n            nowPlaying={nowPlaying}\n            upcoming={upcoming}\n            popular={popular}\n            error={error}\n            loading={loading}\n        />);\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n    padding: 0px 10px;\n\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width : 100%;\n`;\n\nconst Input = styled.input`\n    all : unset;\n    font-size : 28px;\n    width : 100%;\n\n`;\n\n\n\nconst SearchPresenter = ({\n    movieResults, tvResults, loading, error , handleSubmit, searchTerm, updateTerm\n}) => (\n    <>\n    <Helmet>\n                <title>Search | Nomflix</title>\n    </Helmet>\n    <Container>\n        <Form onSubmit={handleSubmit}>\n            <Input placeholder=\"Search Moview or TV SHows....\" value={searchTerm} onChange={updateTerm}></Input>\n        </Form>\n        {loading ? <Loader /> : <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n               <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)} />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)} />\n            ))}\n          </Section>\n            )}\n            {error && <Message text={error} color=\"#e74c3c\" />}\n            {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && <Message text={`Nothing found for: ${searchTerm}`} color=\"#fffff\"/>}\n        </>}\n        </Container>\n        </>\n        );\n\nSearchPresenter.propTypes = {\n    movieResults : PropTypes.array,\n    tvResults : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    searchTerm: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm : PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\"\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm : \"\",\n        loading: false,\n        error: null\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm(searchTerm);\n        }\n    }\n\n    updateTerm = (event) => {\n        const { target: { value } } = event;\n        console.log(value)\n        this.setState({\n            searchTerm : value\n        })\n    }\n    \n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const { data: { results : movieResults }} = await moviesApi.search(searchTerm);\n            const { data: { results : tvResults }} = await tvApi.search(searchTerm);\n            \n            this.setState({\n                movieResults,\n                tvResults\n             })\n        } catch {\n            this.setState({ error: \"Can't find Results!\" });\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n        \n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        )\n    }\n}","import React from \"react\";\nimport {Link, withRouter} from \"react-router-dom\"\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position : fixed;\n    top: 0;\n    left: 0;\n    width : 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0px 10px;\n    background-color: rgba(20,20,20, 0.8);\n    z-index: 10;\n    box-shadow : 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display:flex;\n`;\n\nconst Item = styled.li`\n    width: 70px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 5px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({location : {pathname}}) =>\n(\n    \n    <header >\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </header>\n)\n);\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding : 20px;\n`;\n\n\n\nconst TVPresenter = ({\n    topRated, popular, airingToday, loading, error\n}) => loading ? <Loader /> : (\n        <>\n        <Helmet>\n                <title>TV Show | Nomflix</title>\n        </Helmet>\n        <Container>\n            {topRated && topRated.length > 0 && (\n                <Section title=\"Top Rated Shows\">\n                    {topRated.map(show =>\n                        <Poster\n                            key={show.id}\n                            id={show.id}\n                            title={show.original_name}\n                            imageUrl={show.poster_path}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)} />\n                    )}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Shows\">\n                    {popular.map(show =>\n                        <Poster\n                            key={show.id}\n                            id={show.id}\n                            title={show.original_name}\n                            imageUrl={show.poster_path}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)} />\n                    )}\n                </Section>\n            )}\n            {airingToday && airingToday.length > 0 && (\n                <Section title=\"Airing Today\">\n                    {airingToday.map(show =>\n                        <Poster\n                            key={show.id}\n                            id={show.id}\n                            title={show.original_name}\n                            imageUrl={show.poster_path}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)} />\n                    )}\n                </Section>\n            )}\n            {error && <Message text={error} color=\"#e74c3c\"/>}\n            </Container>\n            </>\n            )\n\nTVPresenter.propTypes = {\n    topRated : PropTypes.array,\n    popular : PropTypes.array,\n    airingToday : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\"\n\nexport default TVContainer;","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\"\n\nexport default class extends React.Component {\n    state = {\n        topRated  : null,\n        popular : null,\n        airingToday: null,\n        loading: true,\n        error: null\n    }\n\n    componentDidMount = async () => {\n        try {\n            const { data : { results: topRated }} = await tvApi.topRated();\n            const { data : { results: popular}} = await tvApi.popular();\n            const { data : { results: airingToday }} = await tvApi.airingToday();\n            \n            this.setState({ topRated, popular, airingToday})\n        } catch {\n            this.setState({\n                error : \"Can't Find Movies Information\"\n            })\n        } finally {\n            this.setState({\n                loading : false\n            })\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        console.log(this.state)\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\n\nconst Data = styled.div`\n    width : 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size : 32px;\n    margin-bottom: 10px;\n`;\n\n\nconst ItemContainer = styled.div``;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin : 0px 10px;\n`;\n\nconst Overview = styled.p`\n    font-size : 15px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width : 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n    \n    loading ? (\n    <>\n    <Helmet>\n        <title>Loading | Nomflix</title>\n    </Helmet>\n    <Loader />\n    </>            \n    ) : (\n    <>\n    <Container>\n        <Helmet>\n            <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\n        </Helmet>\n    <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n    <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../asset/noPosterSmall.png\")\n          }\n        />\n        <Data>\n            <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n            <ItemContainer>\n            <Item>{result.release_date ? result.release_date.substring(0,4) : result.first_air_date.substring(0,4) }</Item>\n            <Divider>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Divider>\n            <Item>\n               {result.genres && result.genres.map((genre, index) => index === result.genres.length -1 ? genre.name : ` ${genre.name} / ` )}                 \n            </Item>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n    </>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\"\n\nexport default DetailContainer;","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component{\n    constructor(props) {\n        super(props);\n        const { location: { pathname } } = props;\n        this.state = {\n            result : null,\n            error: null,\n            loading: true,\n            isMovie : pathname.includes(\"/movie/\")\n        };\n    }\n    \n\n    async componentDidMount() {\n        const {\n            match: { params: { id }},\n            history: { push }\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\"); // kill the function\n        }\n        let result = null;\n        try {\n            if (isMovie) {\n                // ES6\n                ({data : result } = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({data : result } = await tvApi.showDetail(parsedId));\n                \n            }\n            console.log(result)\n        } catch {\n            this.setState({ error : \"Can't find anthing \"})\n        } finally {\n            this.setState({ loading : false, result})   \n        }\n        \n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        console.log(result)\n        return (<DetailPresenter\n            result={result}\n            error={error}\n            loading={loading}\n        />);\n    }\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport TV from \"Routes/TV\";\nimport Detail from \"Routes/Detail\"\nexport default () => {\n    return (\n        <Router>\n            <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" component={TV} />\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/show/:id\" component={Detail} />\n                <Redirect from=\"*\" to=\"/\"/>\n            </Switch>\n            </>\n        </Router>\n    )\n}","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color:inherit;\n    }\n    * {\n        box-sizing : border-box;\n    }\n    body {\n        font-family : --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size : 14px;\n        background-color : rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 20px;\n    }\n\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\"\nimport GlobalStyles from \"Components/GlobalStyles\"\nclass App extends Component {\n  render() {\n    return <> \n      <Router />\n      <GlobalStyles />\n    </>;\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"Components/App\"\nimport './api'\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}